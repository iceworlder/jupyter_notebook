# .gitignore配置文件用于配置不需要加入版本管理的文件，配置好该文件可以为版本管理带来很大的便利，以下是对于配置.gitignore的一些心得记录：
# 1）配置语法：
# # 此为注释，将被Git忽略
# 以斜杠“/”开头表示目录；
# 以星号“*”通配多个字符；
# 以问号“?”通配单个字符
# 以方括号“[]”包含单个字符的匹配列表；
# 以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；
# 
# 此外，git 对于 .ignore 配置文件是按行从上到下进行规则匹配的，意味着如果前面的规则匹配的范围更大，则后面的规则将不会生效；
# 
# 2）示例说明
# a）规则：fd1/*
# 说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；
# b）规则：/fd1/*
# 说明：忽略根目录下的 /fd1/ 目录的全部内容；
# c）规则：
# /*
# !.gitignore
# !/fw/bin/
# !/fw/sf/
# !*.[ch]
# 说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 /fw/bin/ 和 /fw/sf/ 目录；也不忽略*.c及*.h
# 
# .gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。
# 那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：
# 
# git rm -r --cached .
# git add .
# git commit -m 'update .gitignore'
# 
# 注意：
# 不要误解了 .gitignore 文件的用途，该文件只能作用于 Untracked Files，也就是那些从来没有被 Git 记录过的文件（自添加以后，从未 add 及 commit 过的文件）。
# 如果文件曾经被 Git 记录过，那么.gitignore 就对它们完全无效

